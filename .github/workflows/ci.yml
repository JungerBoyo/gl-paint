name: ci

on:
  release:
    types: [published]

env: 
  CONAN_SYSREQUIRES_MODE: enabled
  CONAN_USER_HOME: "${{ github.workspace }}/conan-cache"
  CONAN_USER_HOME_SHORT: "${{ github.workspace }}/conan-cache/short"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy: 
      fail-fast: false
      matrix: # { win + [clang], unix + [clang] }
        os: 
          - windows-2022
          - windows-2019
          - ubuntu-22.04
        compiler:
          - llvm-14.0.0
        generator:
          - Ninja

    steps:
      - uses: actions/checkout@v3

      - name: "Cache setup"
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ${{ env.CONAN_USER_HOME }}
          key: ${{matrix.os}}-${{matrix.compiler}}-${{matrix.generator}}-${{hashFiles('./conanfile.txt')}}-${{hashFiles('**/CMakeLists.txt')}}
          restore-keys: ${{matrix.os}}-${{matrix.compiler}}-${{matrix.generator}}-${{hashFiles('./conanfile.txt')}}

      - name: Setup cpp compiler and tools
        uses: aminya/setup-cpp@v1
        with:
          compiler: ${{ matrix.compiler }}
          vcvarsall: ${{ contains(matrix.os, 'windows') }}
          cmake: true
          ninja: true
          conan: true
          clangtidy: 14.0.0
          ccache: true

      - name: Cleanup Conan system packages (they are not properly cached)
        run: conan remove -f '*/system'

      - name: ubuntu madness
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt-get install -y libgl-dev pkg-config libx11-xcb-dev libfontenc-dev libice-dev libsm-dev libxaw7-dev libxcomposite-dev libxcursor-dev libxdamage-dev libxext-dev libxfixes-dev libxi-dev libxinerama-dev libxkbfile-dev libxmu-dev libxmuu-dev libxpm-dev libxrandr-dev libxrender-dev libxres-dev libxss-dev libxt-dev libxtst-dev libxv-dev libxvmc-dev libxxf86vm-dev libxcb-render0-dev libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-xinerama0-dev libxcb-dri3-dev libxcb-util-dev libxcb-util0-dev uuid-dev
      - name: configure project
        run: |
          cmake -S . -B ./build -G "${{ matrix.generator }}" -DGIT_SHA:STRING=${{github.sha}} -DCMAKE_BUILD_TYPE=Release -DREMOTE_BUILD=ON
      - name: build project
        run: cmake --build ./build

      - name: cpack project
        if: startsWith(github.ref, 'refs/tags')
        working-directory: ./build
        run: cpack -C CPackConfig.cmake -G ZIP

      - name: publish release
        if: startsWith(github.ref, 'refs/tags')
        uses: softprops/action-gh-release@v1
        with:
          files: ./build/*.zip